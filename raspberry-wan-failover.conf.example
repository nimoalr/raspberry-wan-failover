# raspberry-wan-failover configuration
# Copy this file to raspberry-wan-failover.conf and edit values before running ./install.sh

# Interfaces
PRIMARY_WAN_IF="eth0"              # Primary WAN interface (primary_wan in health status)
FAILOVER_WAN_IF="wlan0"            # Failover WAN interface (failover_wan in health status)
TAILS_IF="tailscale0"              # Tailscale interface name

# Gateways (required)
PRIMARY_WAN_GW="192.168.0.1"       # Gateway for primary WAN interface
FAILOVER_WAN_GW="192.168.8.1"      # Gateway for failover WAN interface

# Networks
LAN_NET="192.168.20.0/24"        # Local LAN subnet behind the Pi
TAILSCALE_NET="192.168.20.0/24"  # Subnet to advertise via Tailscale

# Failover checks
CHECK_HOSTS="1.1.1.1 8.8.8.8"  # Space-separated list of IPs to ping for connectivity tests
PING_COUNT=2
PING_TIMEOUT=2
DELAY_UP=30        # Seconds of stable success before switching back to primary WAN
DELAY_DOWN=10      # Seconds of confirmed failure before switching to failover WAN
COOLDOWN=60        # Minimum seconds between state switches

# Firewall extras (generic)
# Allow these source IPs to reach the listed TCP ports during failover (space-separated values).
ALLOWED_IPS="192.168.20.20" # Edit this
ALLOWED_TCP_PORTS="1883" # Edit this
# Block these source IPs from reaching the internet during failover (space-separated IPs).
BLOCKED_INTERNET_ACCESS_IPS="192.168.20.50 192.168.20.51" # Edit this

# NAT behavior
NAT_ON_NORMAL="no"     # NAT LAN -> primary WAN in normal mode (if Pi is gateway for LAN)
NAT_ON_FAILOVER="no"   # NAT LAN -> failover WAN in failover mode (gives LAN internet via failover)

# Advanced (usually fine as-is)
STATE_FILE="/var/run/wan-failover.state"

# Health endpoint (for Uptime Kuma)
# Bind 0.0.0.0 to expose on LAN + Tailscale; use 127.0.0.1 to restrict
HEALTH_BIND="0.0.0.0"
HEALTH_PORT=8080

# Optionally bind only to a device (e.g., tailscale0) to restrict exposure (uncomment to enable)
#HEALTH_BIND_DEVICE="tailscale0"
